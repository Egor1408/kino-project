{"version":3,"sources":["containers/MovieItem/MovieItem.js","components/Navigation/Navigation.js","ErrorBoundary/ErrorBoundary.js","components/Spinner/Spinner.js","containers/MoviesList/MoviesList.js","containers/TabPanel/TabPanel.js","services/FormatData.js","services/ApiService.js","containers/App/App.js","index.js"],"names":["Text","Typography","Title","MovieItem","this","props","poster","title","release","genres","description","rateMovie","filmId","averageRating","rating","genresList","map","item","i","code","key","image","className","FrownTwoTone","src","alt","styleColor","releaseDate","format","Date","level","style","borderColor","type","strong","allowHalf","count","defaultValue","fontSize","onChange","value","Component","defaultProps","id","Navigation","totalMovieResults","nextPage","loadMovieList","activeTab","currentPage","current","total","pageSize","page","ErrorBoundary","state","hasError","error","info","setState","children","Spinner","size","MoviesList","moviesList","column","totalResults","searchTerm","data","film","status","Fragment","grid","gutter","dataSource","renderItem","Item","TabPane","Tabs","Search","Input","TabPanel","inputRef","focus","searchMoviesList","loadSearchList","totalSearchResults","currentSearchPage","ratedMoviesList","currentRatedPage","loadRatedList","totalRatedResults","changeSearchInput","defaultActiveKey","e","changeTab","tab","ref","placeholder","target","FormatData","mergeData","all","rated","a","mergedData","Object","keys","hasOwnProperty","arrayToObject","res","forEach","elem","formatMovieData","movies","values","movie","newGenres","genre_ids","slice","genre","filter","name","overview","poster_path","background","backdrop_path","release_date","presonalRating","vote_average","ApiService","_apiKey","_apiBase","formatData","getGenres","getRequest","then","getRated","session","JSON","parse","sessionStorage","getItem","totalPages","token","results","ratedMovies","total_results","searchMovies","query","result","searchedMovies","initguestSession","guest_session_id","expiry","expires_at","setItem","stringify","setRating","method","body","headers","url","obj","fetch","ok","Error","json","response","App","apiService","ratedList","pageNumber","list","catch","onError","searchList","checkWidth","document","documentElement","clientWidth","newPage","debounce","movieApi","movieId","prevProps","prevState","div","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.a3ab9554.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Typography, Card, Rate } from 'antd';\r\nimport { format } from 'date-fns';\r\nimport { FrownTwoTone } from '@ant-design/icons';\r\nimport './MovieItem.css';\r\n\r\nconst { Text, Title } = Typography;\r\n\r\nexport default class MovieItem extends Component {\r\n  static defaultProps = {\r\n    rating: 0,\r\n  }\r\n\r\n  static defaultProps = {\r\n    id: 0,\r\n    averageRating: 0,\r\n    poster: null,\r\n    title: null,\r\n    release: null,\r\n    genres: [],\r\n    description: 'Описание временно отсутствует',\r\n    rating: 0,\r\n  }\r\n\r\n  static propTypes = {\r\n    id: PropTypes.number,\r\n    averageRating: PropTypes.number,\r\n    poster: PropTypes.string,\r\n    title: PropTypes.string,\r\n    release: PropTypes.string,\r\n    description: PropTypes.string,\r\n    genres: PropTypes.array,\r\n    rating: PropTypes.number,\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      poster, title, release, genres, description,\r\n      rateMovie, filmId, averageRating, rating,\r\n    } = this.props;\r\n\r\n    const genresList = genres.map((item, i) => (<Text code key={i}> {item}</Text>));\r\n    let image = <div className='noImage'>\r\n                  <span>No Image</span>\r\n                  <FrownTwoTone/>\r\n                </div>;\r\n\r\n    if (poster) {\r\n      image = <img src={`http://image.tmdb.org/t/p/w185${poster}`} alt='poster'/>;\r\n    }\r\n    let styleColor = null;\r\n    if (averageRating >= 7) {\r\n      styleColor = '#66e900';\r\n    } else if (averageRating >= 5) {\r\n      styleColor = '#e9d100';\r\n    } else if (averageRating >= 3) {\r\n      styleColor = '#e97e00';\r\n    } else {\r\n      styleColor = '#e90000';\r\n    }\r\n    const releaseDate = release ? format(new Date(release), 'MMMM d, yyyy') : null;\r\n    return (\r\n\r\n      <Card>\r\n        <div className='poster'>\r\n          {image}\r\n        </div>\r\n        <div className='description'>\r\n          <div className='title'>\r\n            <Title level={4}>{title}</Title>\r\n          </div>\r\n          <div className='vote-average' style={{ borderColor: styleColor }}>\r\n            <span>{averageRating}</span>\r\n          </div>\r\n          <div className='date'>\r\n            <Text type=\"secondary\">{releaseDate}</Text>\r\n          </div>\r\n          <div className=\"genres\">\r\n            {genresList}\r\n          </div>\r\n          <div className=\"overview\">\r\n            <Text strong>{description}</Text>\r\n          </div>\r\n          <div className=\"rate\">\r\n            <Rate allowHalf count='10' defaultValue={rating} style={{ fontSize: 14 }} onChange={(value) => {\r\n              rateMovie(value, filmId);\r\n            }}/>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Pagination } from 'antd';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = (props) => {\r\n  const {\r\n    totalMovieResults, nextPage, loadMovieList, activeTab, currentPage,\r\n  } = props;\r\n  if (loadMovieList && totalMovieResults > 20) {\r\n    return (\r\n      <Pagination\r\n        current={currentPage}\r\n        total={totalMovieResults}\r\n        pageSize='20'\r\n        onChange={(page) => { nextPage(activeTab, page); }}\r\n      />\r\n    );\r\n  }\r\n  return null;\r\n};\r\nexport default Navigation;","import React, { Component } from 'react';\r\n\r\nexport default class ErrorBoundary extends Component {\r\n  state = {\r\n    hasError: false,\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Something wrong</h1>;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}","import React from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nconst Spinner = () => (\r\n    <Spin size='large'/>\r\n);\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport { List, Empty, Result } from 'antd';\r\nimport MovieItem from '../MovieItem/MovieItem';\r\nimport Navigation from '../../components/Navigation/Navigation';\r\nimport ErrorBoundary from '../../ErrorBoundary/ErrorBoundary';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport './MoviesList.css';\r\nimport 'antd/dist/antd.css';\r\n\r\nexport default class MoviesList extends Component {\r\n  state = {\r\n    hasError: false,\r\n  }\r\n\r\n  componentDidCatch() {\r\n    this.setState({\r\n      hasError: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      moviesList, currentPage, loadMovieList, nextPage, column,\r\n      hasError, totalResults, searchTerm, activeTab,\r\n    } = this.props;\r\n    // console.log(currentPage);\r\n    const data = moviesList.map((film) => ({\r\n      id: film.id,\r\n      poster: film.poster,\r\n      rating: film.rating,\r\n      title: film.title,\r\n      description: film.description,\r\n      release: film.release,\r\n      genres: film.genres,\r\n      averageRating: film.averageRating,\r\n    }));\r\n    if (hasError) {\r\n      return <Result\r\n              status=\"warning\"\r\n              title=\"There are some problems with your internet.\"\r\n            />;\r\n    }\r\n    if (!searchTerm && activeTab === '1') {\r\n      return <Empty description='Введите название фильма'/>;\r\n    }\r\n    if (loadMovieList && totalResults !== 0) {\r\n      return (\r\n\r\n                  <React.Fragment>\r\n                    <div className='movie-list'>\r\n                      <List\r\n                        grid={{ gutter: 20, column }}\r\n                        dataSource={data}\r\n                        renderItem={(item) => (\r\n                          <List.Item>\r\n                            <ErrorBoundary key= {item.id}>\r\n                              <MovieItem\r\n                                // hasError={this.state.hasError}\r\n                                filmId={item.id}\r\n                                poster={item.poster}\r\n                                title={item.title}\r\n                                release={item.release}\r\n                                description={item.description}\r\n                                genres={item.genres}\r\n                                averageRating={item.averageRating}\r\n                                rating={item.rating}\r\n                                rateMovie={this.props.rateMovie}\r\n                              />\r\n                            </ErrorBoundary>\r\n                          </List.Item>\r\n                        )}\r\n                      />\r\n                    </div>\r\n                    <Navigation\r\n                      totalMovieResults={totalResults}\r\n                      currentPage={currentPage}\r\n                      loadMovieList={loadMovieList}\r\n                      nextPage={nextPage}\r\n                      activeTab={activeTab}\r\n                    />\r\n                  </React.Fragment>\r\n      );\r\n    }\r\n\r\n    if (!totalResults && loadMovieList && activeTab === '1') {\r\n      return <Empty description='Поиск не дал результатов'/>;\r\n    }\r\n    if (!totalResults && loadMovieList && activeTab === '2') {\r\n      return <Empty description='Вы не оценили ни одного фильма'/>;\r\n    }\r\n    return <Spinner />;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Tabs, Input } from 'antd';\r\nimport MoviesList from '../MoviesList/MoviesList';\r\nimport './TabPanel.css';\r\n\r\nconst { TabPane } = Tabs;\r\nconst { Search } = Input;\r\n\r\nexport default class TabPanel extends Component {\r\n  componentDidMount() {\r\n    this.inputRef.focus();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      searchTerm, searchMoviesList, loadSearchList, totalSearchResults, currentSearchPage,\r\n\r\n      ratedMoviesList, currentRatedPage, loadRatedList, totalRatedResults,\r\n\r\n      rateMovie, column, nextPage,\r\n      activeTab, changeSearchInput,\r\n\r\n    } = this.props;\r\n    return (\r\n    <div className='TabPanel'>\r\n      <Tabs className=\"tabs\" defaultActiveKey=\"1\" onChange={(e) => { this.props.changeTab(e); }}>\r\n        <TabPane tab=\"Search\" key=\"1\">\r\n          <Search\r\n            // eslint-disable-next-line no-return-assign\r\n            ref={(inputRef) => this.inputRef = inputRef}\r\n            className='search'\r\n            placeholder='Search movie'\r\n            onChange={(e) => (changeSearchInput(e.target.value))}\r\n          />\r\n          <MoviesList\r\n            activeTab={activeTab}\r\n            column={column}\r\n            currentPage={currentSearchPage}\r\n            searchTerm={searchTerm}\r\n            loadMovieList={loadSearchList}\r\n            totalResults={totalSearchResults}\r\n            moviesList={searchMoviesList}\r\n            rateMovie={rateMovie}\r\n            nextPage={nextPage}\r\n          />\r\n        </TabPane>\r\n        <TabPane tab=\"Rated\" key=\"2\" >\r\n          <MoviesList\r\n            activeTab={activeTab}\r\n            column={column}\r\n            moviesList={ratedMoviesList}\r\n            currentPage={currentRatedPage}\r\n            loadMovieList={loadRatedList}\r\n            totalResults={totalRatedResults}\r\n\r\n            rateMovie={rateMovie}\r\n            nextPage={nextPage}\r\n          />\r\n        </TabPane>\r\n      </Tabs>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n","export default class FormatData {\r\n  mergeData = async (all, rated) => {\r\n    const mergedData = Object.keys(all).map((key) => {\r\n      // eslint-disable-next-line no-prototype-builtins\r\n      if (rated.hasOwnProperty(key)) return rated[key];\r\n      return all[key];\r\n    });\r\n\r\n    return mergedData;\r\n  };\r\n\r\n  arrayToObject = (data) => {\r\n    const res = {};\r\n    data.forEach((elem) => { res[elem.id] = elem; });\r\n    return res;\r\n  };\r\n\r\n  formatMovieData = async (movies, genres) => {\r\n    const data = {};\r\n    Object.values(movies).map((movie) => {\r\n      const newGenres = movie.genre_ids\r\n        .slice(0, 2)\r\n        .map((genre) => genres[genre])\r\n        .filter((genre) => genre)\r\n        .map((genre) => genre.name);\r\n\r\n      data[movie.id] = {\r\n        id: movie.id,\r\n        title: movie.title || movie.name || 'Название отсутствует',\r\n        genres: newGenres,\r\n        description: movie.overview || 'Описание временно отсутствует',\r\n        poster: movie.poster_path,\r\n        background: movie.backdrop_path,\r\n        release: movie.release_date,\r\n        presonalRating: movie.rating || 0,\r\n        averageRating: movie.vote_average || 0,\r\n        rating: movie.rating || 0,\r\n      };\r\n      return data;\r\n    });\r\n    return data;\r\n  };\r\n}","import FormatData from './FormatData';\r\n\r\nexport default class ApiService {\r\n  _apiKey = '?api_key=3b74691a96811eecae740c01bb3dfeb1';\r\n\r\n  _apiBase = 'https://api.themoviedb.org/3';\r\n\r\n  formatData = new FormatData();\r\n\r\n  static genres = {};\r\n\r\n  async getRequest(url, obj = null) {\r\n    const res = await fetch(`${this._apiBase}${url}`, obj);\r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch ${url}, received ${res.status} `);\r\n    }\r\n    const response = await res.json();\r\n    return response;\r\n  }\r\n\r\n  getGenres = async () => {\r\n    this.genres = await this.getRequest(`/genre/movie/list${this._apiKey}&language=ru`)\r\n      .then(({ genres }) => this.formatData.arrayToObject(genres));\r\n    return this.genres;\r\n  };\r\n\r\n  getRated = async (page) => {\r\n    const session = JSON.parse(sessionStorage.getItem('session'));\r\n    if (!session) {\r\n      return {\r\n        movies: [],\r\n        currentPage: 1,\r\n        totalPages: 1,\r\n      };\r\n    }\r\n\r\n    const res = await this.getRequest(`/guest_session/${session.token}/rated/movies${this._apiKey}&page=${page}&language=ru&sort_by=created_at.asc`);\r\n    const ratedMovies = await this.formatData.formatMovieData(res.results, this.genres);\r\n\r\n    return {\r\n      movies: ratedMovies,\r\n      currentPage: res.page,\r\n      totalResults: res.total_results,\r\n    };\r\n  };\r\n\r\n  searchMovies = async (query, page) => {\r\n    const ratedMovies = await (await this.getRated(1)).movies;\r\n    const res = await this.getRequest(`/search/movie${this._apiKey}&language=ru&query=${query}&page=${page}&include_adult=false`);\r\n    const searchedMovies = await this.formatData.formatMovieData(res.results, this.genres)\r\n      .then((result) => this.formatData.mergeData(result, ratedMovies));\r\n\r\n    return {\r\n      movies: searchedMovies,\r\n      currentPage: res.page,\r\n      totalResults: res.total_results,\r\n    };\r\n  };\r\n\r\n  initguestSession = async () => {\r\n    const res = await this.getRequest(`/authentication/guest_session/new${this._apiKey}`);\r\n    const session = {\r\n      token: res.guest_session_id,\r\n      expiry: res.expires_at,\r\n    };\r\n\r\n    sessionStorage.setItem('session', JSON.stringify(session));\r\n  };\r\n\r\n  setRating = async (id, session, data) => {\r\n    const res = await this.getRequest(`/movie/${id}/rating${this._apiKey}&guest_session_id=${session}`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    return res;\r\n  };\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Result } from 'antd';\r\nimport TabPanel from '../TabPanel/TabPanel';\r\nimport ApiService from '../../services/ApiService';\r\nimport ErrorBoundary from '../../ErrorBoundary/ErrorBoundary';\r\nimport { debounce } from '../../../node_modules/lodash';\r\nimport 'antd/dist/antd.css';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  static propTypes = {\r\n    searchMovies: PropTypes.array,\r\n    currentPageSearch: PropTypes.number,\r\n    totalSearchResults: PropTypes.number,\r\n    loadSearchList: PropTypes.bool,\r\n    searchTerm: PropTypes.string,\r\n    totalRatedResults: PropTypes.number,\r\n    activeTab: PropTypes.number,\r\n    hasError: PropTypes.bool,\r\n  }\r\n\r\n  state = {\r\n\r\n    searchTerm: '',\r\n    searchMoviesList: [],\r\n    currentSearchPage: 1,\r\n    loadSearchList: false,\r\n    totalSearchResults: 0,\r\n\r\n    ratedMoviesList: [],\r\n    currentRatedPage: 1,\r\n    loadRatedList: false,\r\n    totalRatedResults: 0,\r\n\r\n    activeTab: '1',\r\n    column: 2,\r\n    hasError: false,\r\n\r\n  }\r\n\r\n  apiService = new ApiService();\r\n\r\n  componentDidMount() {\r\n    this.checkWidth();\r\n    this.apiService.getGenres();\r\n    if (!sessionStorage.getItem('session')) this.apiService.initguestSession();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if ((this.state.searchTerm !== prevState.searchTerm && this.state.searchTerm !== '')\r\n      || (this.state.activeTab !== prevState.activeTab && this.state.searchTerm !== '')) {\r\n      this.setState({\r\n        loadSearchList: false,\r\n      });\r\n      this.searchList(this.state.searchTerm, this.state.currentSearchPage);\r\n    }\r\n\r\n    if ((this.state.currentSearchPage !== prevState.currentSearchPage)) {\r\n      this.setState({\r\n        loadSearchList: false,\r\n      });\r\n      this.searchList(this.state.searchTerm, this.state.currentSearchPage);\r\n    }\r\n\r\n    if (this.state.activeTab !== prevState.activeTab) {\r\n      this.setState({\r\n        loadRatedList: false,\r\n      });\r\n      this.ratedList(this.state.currentRatedPage);\r\n    }\r\n    if ((this.state.currentRatedPage !== prevState.currentRatedPage)) {\r\n      this.setState({\r\n        loadRatedList: false,\r\n      });\r\n      this.ratedList(this.state.currentRatedPage);\r\n    }\r\n  }\r\n\r\n  ratedList = (pageNumber) => {\r\n    this.apiService\r\n      .getRated(pageNumber)\r\n      .then((list) => {\r\n        const result = Object.values(list.movies).map((i) => (i));\r\n        this.setState({\r\n          ratedMoviesList: result,\r\n          totalRatedResults: list.totalResults,\r\n          loadRatedList: true,\r\n        });\r\n      })\r\n      .catch(this.onError);\r\n  };\r\n\r\n  searchList = (searchTerm, pageNumber) => {\r\n    this.apiService\r\n      .searchMovies(searchTerm, pageNumber)\r\n      .then((list) => {\r\n        this.setState({\r\n          searchMoviesList: list.movies,\r\n          totalSearchResults: list.totalResults,\r\n          loadSearchList: true,\r\n        });\r\n      })\r\n      .catch(this.onError);\r\n  }\r\n\r\n  componentDidCatch() {\r\n    this.setState({\r\n      hasError: true,\r\n    });\r\n  }\r\n\r\n  checkWidth = () => {\r\n    if (document.documentElement.clientWidth < 800) {\r\n      this.setState({\r\n        column: 1,\r\n      });\r\n    }\r\n  }\r\n\r\n  nextPage = (tab, newPage) => {\r\n    const currentPage = tab === '1' ? 'currentSearchPage' : 'currentRatedPage';\r\n    this.setState({\r\n      [currentPage]: newPage,\r\n    });\r\n  }\r\n\r\n  changeSearchInput = debounce((e) => {\r\n    this.setState({\r\n      searchTerm: e,\r\n      currentSearchPage: 1,\r\n    });\r\n  }, 1500);\r\n\r\n  changeTab = (tab) => {\r\n    this.setState({\r\n      activeTab: tab,\r\n    });\r\n  }\r\n\r\n  onError = () => {\r\n    this.setState({\r\n      hasError: true,\r\n    });\r\n  }\r\n\r\n  setRating = async (value, id) => {\r\n    const key = (JSON.parse(sessionStorage.getItem('session'))).token;\r\n    await this.movieApi.setRating(id, key, { value });\r\n  };\r\n\r\n  rateMovie = async (value, movieId) => {\r\n    const key = (JSON.parse(sessionStorage.getItem('session'))).token;\r\n    await this.apiService\r\n      .setRating(movieId, key, { value })\r\n      .catch(this.onError);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <Result\r\n            status=\"warning\"\r\n            title=\"There are some problems with your internet.\"\r\n            />;\r\n    }\r\n    return (\r\n        <ErrorBoundary>\r\n          <div className='wrapper'>\r\n            <TabPanel\r\n              column = {this.state.column}\r\n\r\n              searchTerm={this.state.searchTerm}\r\n              searchMoviesList={this.state.searchMoviesList}\r\n              loadSearchList={this.state.loadSearchList}\r\n              currentSearchPage={this.state.currentSearchPage}\r\n              totalSearchResults={this.state.totalSearchResults}\r\n\r\n              ratedMoviesList={this.state.ratedMoviesList}\r\n              currentRatedPage={this.state.currentRatedPage}\r\n              loadRatedList={this.state.loadRatedList}\r\n              totalRatedResults={this.state.totalRatedResults}\r\n\r\n              rateMovie={this.rateMovie}\r\n              nextPage={this.nextPage}\r\n              changeSearchInput={this.changeSearchInput}\r\n              changeTab={this.changeTab}\r\n              activeTab={this.state.activeTab}\r\n            />\r\n          </div>\r\n        </ErrorBoundary>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './containers/App/App';\r\n\r\nconst div = document.getElementById('root');\r\nReactDOM.render(<App />, div);\r\n"],"sourceRoot":""}